#include <iostream>
#include <opencv2/core.hpp>
#include <opencv2/imgcodecs.hpp>
#include <opencv2/highgui.hpp>
#include <opencv2/imgproc.hpp>
#include <opencv2/bgsegm.hpp>
#include <opencv2/opencv.hpp>
using namespace cv;
using namespace std;

//Ptr<BackgroundSubtractor> pMOG; //MOG Background subtractor
//コンパイル: g++ test.cpp -I/usr/local/include/opencv2 -I/usr/local/include/opencv -L/usr/local/lib -lopencv_core -lopencv_imgcodecs -lopencv_highgui -lopencv_imgproc -lopencv_bgsegm

int main(int argc, const char **argv)
{
    Mat wallimg = imread("wall.jpeg", IMREAD_COLOR);
    Mat image_blurred_with_5x5_kernel;
    GaussianBlur(wallimg, image_blurred_with_5x5_kernel, Size(5, 5), 0);
    Mat handimg = imread("hand.jpeg", IMREAD_COLOR);
    GaussianBlur(handimg, image_blurred_with_5x5_kernel, Size(5, 5), 0);
    namedWindow("wall", WINDOW_AUTOSIZE);
    imshow("wall", wallimg);
    namedWindow("hand", WINDOW_AUTOSIZE);
    imshow("hand", handimg);

    /*cv::Mat fgMaskMOG; //fg mask generated by MOG method
    pMOG = createBackgroundSubtractorMOG(); //MOG approach
    pMOG->apply(wallimg, fgMaskMOG);
    pMOG->apply(handimg, fgMaskMOG);
    namedWindow("hand", cv::WINDOW_AUTOSIZE);
    imshow("hand", fgMaskMOG);*/
    //cv::BackgroundSubtractorGMG backGroundSubtractor;
    //pMOG2 = createBackgroundSubtractorMOG2();
    //cv::Ptr<cv::BackgroundSubtractor> bgfs = cv::bgsegm::createBackgroundSubtractorMOG();

    waitKey(0);
    destroyAllWindows();

    return 0;
}
